name: Excel Upload Workflow

on:
  push:
    branches:
      - manager
    paths:
      - 'files/*.xlsx'

permissions: 
  issues: write
  contents: read

env:
  TEMP_FOLDER_DATA: /tmp/xlsx2rss-data

jobs:
  set-up:
    runs-on: ubuntu-latest
    
    outputs:
      commit-files: ${{ steps.commit-file.outputs.files }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('.github/actions/package-lock.json') }}

      - name: Install Node Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cat .github/actions/package.json > package.json
          cat .github/actions/package-lock.json > package-lock.json
          npm ci

      - name: Get Commit File
        id: commit-file
        uses: ./.github/actions/get-commit-file
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file-name: '*.xlsx'

  
  make-data-file:
    needs: set-up
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.artifact.outputs.artifact-id }}
      artifact-url: ${{ steps.artifact.outputs.artifact-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install Python Dependancies
        run: pip install -r requirements.txt

      - name: Make temp folder
        run: mkdir ${{ env.TEMP_FOLDER_DATA }}

      - name: Run make_data code
        env:
          PASS_KEY: "${{ secrets.PASS_KEY }}"
          FILE_NAME: "${{ fromJson(needs.set-up.outputs.commit-files)[0].origin_name }}"
          TEMP_FOLDER_DATA: "${{ env.TEMP_FOLDER_DATA }}"
        run: |
          python make_data.py
          
      - name: Upload artifact
        id: artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: xlsx2rss-data
          path: ${{ env.TEMP_FOLDER_DATA }}
      
  create-issue:
    needs: [set-up, make-data-file]
    runs-on: ubuntu-latest
    outputs:
      issue-comment-body: ${{ steps.wait-issue.outputs.comment-body }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install Python Dependancies
        run: pip install -r requirements.txt

      - name: Use Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('.github/actions/package-lock.json') }}

      - name: Install Node Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cat .github/actions/package.json > package.json
          cat .github/actions/package-lock.json > package-lock.json
          npm ci

      - name: Download artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: xlsx2rss-data
          path: ${{ env.TEMP_FOLDER_DATA }}

      - name: Create approval markdown
        env:
          FILE_ORIGIN_NAME: ${{ fromJson(needs.set-up.outputs.commit-files)[0].name }}
          UPLOAD_FILE_NAME: ${{ fromJson(needs.set-up.outputs.commit-files)[0].origin_name }}
          UPLOAD_FILE_URL: ${{ fromJson(needs.set-up.outputs.commit-files)[0].url.blob }}
          ARTIFACT_URL: ${{ needs.make-data-file.outputs.artifact-url }}
          TEMP_FOLDER_DATA: ${{ env.TEMP_FOLDER_DATA }}
        run: |
          python create_template.py

      - name: Create approval issue
        id: create-issue
        uses: ./.github/actions/create-issue
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          issue-title: "[Github Action] 파일 승인 요청"
          issue-body-url: ./templates/request_approve.tmp.md

      - name: Alert ISSUE
        run: |
          echo "------------------------------------------------------------------------"
          echo "|"
          echo "| 이슈 생성: ${{ steps.create-issue.outputs.issue-url }}"
          echo "|"
          echo "------------------------------------------------------------------------"
          echo -e "\n\nWaiting..."

      - name: Wait for issue closed
        id: wait-issue
        uses: ./.github/actions/wait-for-issue
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.create-issue.outputs.issue-number }}
          interval-wait-time: 2000
          max-try: 60

  approved:
    needs: create-issue
    runs-on: ubuntu-latest
    if: contains(fromJson('["O", "o", "ok", "OK", "Ok", "oK"]'), needs.create-issue.outputs.issue-comment-body)
    
    steps:
      - name: Test...
        run: echo "approved"

  denied:
    needs: create-issue
    runs-on: ubuntu-latest
    if: ${{ ! contains(fromJson('["O", "o", "ok", "OK", "Ok", "oK"]'), needs.create-issue.outputs.issue-comment-body) }}

    steps:
      - name: Test...
        run: echo "denied"